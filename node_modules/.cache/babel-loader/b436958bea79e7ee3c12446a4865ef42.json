{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"about\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"button\", null, \"Cambiar titulo\", -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h1\", null, _toDisplayString($setup.title), 1\n  /* TEXT */\n  ), _hoisted_2]);\n}","map":{"version":3,"mappings":";;AAEOA,OAAK,EAAC;;;gCAGTC,oBAA+B,QAA/B,EAA+B,IAA/B,EAAQ,gBAAR,EAAsB;AAAA;AAAtB;;;uBAHFC,oBAIM,KAJN,cAIM,CAHJD,oBAAoB,IAApB,EAAoB,IAApB,EAAoBE,iBAAbC,YAAa,CAApB,EAAY;AAAA;AAAZ,GAGI,EADJC,UACI,CAJN","names":["class","_createElementVNode","_createElementBlock","_toDisplayString","$setup","_hoisted_2"],"sourceRoot":"","sources":["/home/walter/Escritorio/vue/08-compo-api/src/views/AboutView.vue"],"sourcesContent":["\n<template>\n  <div class=\"about\">\n    <h1>{{ title }}</h1>\n\n    <button>Cambiar titulo</button>\n  </div>\n</template>\n<script>\nimport {\n  ref,\n  onBeforeMount,\n  onBeforeUnmount,\n  onBeforeUpdate,\n  onMounted,\n  onRenderTracked,\n  onUnmounted,\n  onRenderTriggered,\n  onScopeDispose,\n  onServerPrefetch,\n  onUpdated,\n} from \"vue\";\nexport default {\n  setup() {\n    const title = ref(\"About\");\n\n    onBeforeMount(() => {\n      console.log(\"onBeforeMount\");\n    });\n    onBeforeUnmount(() => {\n      console.log(\"onBeforeUnmount\");\n    });\n    onBeforeUpdate(() => {\n      console.log(\"onBeforeUpdate\");\n    });\n    onMounted(() => {\n      console.log(\"onMounted\");\n    });\n    onRenderTracked(() => {\n      console.log(\"onRenderTracked\");\n    });\n    onUnmounted(() => {\n      console.log(\"onUnmounted\");\n    });\n    onRenderTriggered(() => {\n      console.log(\"onRenderTriggered\");\n    });\n    onScopeDispose(() => {\n      console.log(\"onScopeDispose\");\n    });\n    onServerPrefetch(() => {\n      console.log(\"onServerPrefetch\");\n    });\n    onUpdated(() => {\n      console.log(\"onUpdated\");\n    });\n\n    return {\n      title,\n      changeTitle: () => {\n        title.value = \"New About\";\n      },\n    };\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}