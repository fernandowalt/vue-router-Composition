{"ast":null,"code":"import { watch } from \"vue\";\nimport { useRoute, onBeforeRouteLeave } from \"vue-router\";\nimport usePokemon from \"../composables/usePokemon\";\nexport default {\n  setup() {\n    const route = useRoute();\n    const {\n      pokemon,\n      isLoading,\n      errorMessage,\n      searchPokemon\n    } = usePokemon(route.params.id); //watch ejecuta la funcion searchPokemon cuando router.params.id cambia.\n\n    watch(() => route.params.id, () => searchPokemon(route.params.id));\n    onBeforeRouteLeave(() => {\n      console.log('onbefore');\n    });\n    return {\n      pokemon,\n      isLoading,\n      errorMessage\n    };\n  }\n\n};","map":{"version":3,"mappings":"AAcA,SAASA,KAAT,QAAsB,KAAtB;AACA,SAASC,QAAT,EAAkBC,kBAAlB,QAA2C,YAA3C;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AAEA,eAAe;AACbC,OAAK,GAAG;AACN,UAAMC,KAAI,GAAIJ,QAAQ,EAAtB;AAEA,UAAM;AAAEK,aAAF;AAAWC,eAAX;AAAsBC,kBAAtB;AAAoCC;AAApC,QAAsDN,UAAU,CACpEE,KAAK,CAACK,MAAN,CAAaC,EADuD,CAAtE,CAHM,CAON;;AAEAX,SAAK,CACH,MAAMK,KAAK,CAACK,MAAN,CAAaC,EADhB,EAEH,MAAMF,aAAa,CAACJ,KAAK,CAACK,MAAN,CAAaC,EAAd,CAFhB,CAAL;AAKDT,sBAAkB,CAAC,MAAI;AACrBU,aAAO,CAACC,GAAR,CAAY,UAAZ;AACD,KAFiB,CAAlB;AAKC,WAAO;AACLP,aADK;AAELC,eAFK;AAGLC;AAHK,KAAP;AAKD;;AAzBY,CAAf","names":["watch","useRoute","onBeforeRouteLeave","usePokemon","setup","route","pokemon","isLoading","errorMessage","searchPokemon","params","id","console","log"],"sourceRoot":"","sources":["/home/walter/Escritorio/vue/08-compo-api/src/views/Pokemon.vue"],"sourcesContent":["<template>\n  <h1 v-if=\"!pokemon && !errorMessage\">Loading...</h1>\n  <h1 v-else-if=\"errorMessage\">{{ errorMessage }}</h1>\n\n  <div v-else>\n    <h3>{{ pokemon.name }}</h3>\n    <img :src=\"pokemon.sprites.front_default\" :alt=\"pokemon.name\" />\n    <br />\n\n    <router-link :to=\"{ name: 'search' }\">Search</router-link>\n  </div>\n</template>\n\n<script>\nimport { watch } from \"vue\";\nimport { useRoute,onBeforeRouteLeave} from \"vue-router\";\nimport usePokemon from \"../composables/usePokemon\";\n\nexport default {\n  setup() {\n    const route = useRoute();\n\n    const { pokemon, isLoading, errorMessage, searchPokemon } = usePokemon(\n      route.params.id\n    );\n\n    //watch ejecuta la funcion searchPokemon cuando router.params.id cambia.\n\n    watch(\n      () => route.params.id,\n      () => searchPokemon(route.params.id)\n    );\n   \n   onBeforeRouteLeave(()=>{\n     console.log('onbefore');\n   })\n\n\n    return {\n      pokemon,\n      isLoading,\n      errorMessage,\n    };\n  },\n};\n</script>\n\n<style>\n</style>"]},"metadata":{},"sourceType":"module"}